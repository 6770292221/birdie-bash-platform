services:
  # Frontend React Application
  frontend:
    build: ./frontend
    container_name: birdie-bash-platform
    restart: unless-stopped
    ports:
      - "9001:9001"
    environment:
      - NODE_ENV=development
      - VITE_GATEWAY_URL=http://localhost:3000
      - VITE_API_BASE_URL=http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - gateway
    networks:
      - birdie-network

  # MongoDB for both auth and event services
  mongodb:
    image: mongo:7.0
    container_name: birdie-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - birdie-network

  # RabbitMQ for event service message queue
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: birdie-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - birdie-network

  # MySQL for payment service
  mysql:
    image: mysql:8.0
    container_name: birdie-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: payment_db
      MYSQL_USER: payment_user
      MYSQL_PASSWORD: payment123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/payment-init.sql:/docker-entrypoint-initdb.d/payment-init.sql:ro
    networks:
      - birdie-network

  # Gateway API
  gateway:
    build: ./gateway
    container_name: birdie-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - JWT_SECRET=your-secret-key
      - AUTH_SERVICE_URL=http://auth-service:3001
      - EVENT_SERVICE_URL=http://event-service:3003
      - REGISTRATION_SERVICE_URL=http://registration-service:3005
      - SETTLEMENT_SERVICE_URL=http://settlement-service:3006
      - PAYMENT_SERVICE_GRPC_URL=payment-service:50051
    depends_on:
      - auth-service
      - event-service
      - registration-service
      - settlement-service
    networks:
      - birdie-network

  # Auth Service
  auth-service:
    build: ./auth-service
    container_name: birdie-auth-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - USER_DB_URI=mongodb+srv://birdie_admin:AppUser%232025%21@birdie-bash-cluster.lwadyko.mongodb.net/user?retryWrites=true&w=majority&appName=birdie-bash-cluster
    depends_on:
      - mongodb
    networks:
      - birdie-network

  # Event Service
  event-service:
    build: ./event-service
    container_name: birdie-event-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - EVENT_DB_URI=mongodb+srv://birdie_admin:AppUser%232025%21@birdie-bash-cluster.lwadyko.mongodb.net/event?retryWrites=true&w=majority&appName=birdie-bash-cluster
      - RABBIT_URL=amqp://admin:password123@rabbitmq:5672
      - RABBIT_EXCHANGE=events
      - ENABLE_CAPACITY_WORKER=true
      - REGISTRATION_SERVICE_URL=http://registration-service:3005
      - RABBIT_ENABLE_NOTIFY_BIND=true
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - birdie-network

  # Registration Service
  registration-service:
    build: ./registration-service
    container_name: birdie-registration-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - PORT=3005
      - REG_DB_URI=mongodb+srv://birdie_admin:AppUser%232025%21@birdie-bash-cluster.lwadyko.mongodb.net/registration?retryWrites=true&w=majority&appName=birdie-bash-cluster
      - EVENT_SERVICE_URL=http://event-service:3003
      - RABBIT_URL=amqp://admin:password123@rabbitmq:5672
      - RABBIT_EXCHANGE=events
      - ENABLE_WAITLIST_WORKER=true
    depends_on:
      rabbitmq:
        condition: service_healthy
      event-service:
        condition: service_started
    networks:
      - birdie-network

  # Settlement Service
  settlement-service:
    build: ./settlement-service
    container_name: birdie-settlement-service
    restart: unless-stopped
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - PORT=3006
      - SETTLEMENT_DB_URI=mongodb+srv://birdie_admin:AppUser%232025%21@birdie-bash-cluster.lwadyko.mongodb.net/settlement?retryWrites=true&w=majority&appName=birdie-bash-cluster
      - GRPC_PORT=50051
      - GATEWAY_URL=http://birdie-gateway:3000
      - RABBIT_URL=amqp://admin:password123@rabbitmq:5672
      - RABBIT_EXCHANGE=events
      - RABBIT_LOG_PAYLOADS=true
      - RABBIT_MAX_LOG_BYTES=2048
      - RABBIT_RETRY_MS=2000
      - ENABLE_WAITLIST_WORKER=true
      - RABBIT_CONSUMER_DELAY_MS=10000
      - RABBIT_PREFETCH=1
      - RABBIT_AUTOBIND=true
      - RABBIT_AUTOBIND_ON_RETURN=false
      - RABBIT_PAYMENT_QUEUE=payment.issue
      - RABBIT_BIND_KEY=payment.settlement.issue
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - birdie-network

  # Payment Service
  payment-service:
    build: ./payment-service
    container_name: birdie-payment-service
    restart: unless-stopped
    ports:
      - "3002:3002"   # HTTP endpoint
      - "50051:50051" # gRPC endpoint
    env_file:
      - ./payment-service/.env.docker
    networks:
      - birdie-network

  matching-service:
    build: ./matching-service
    container_name: birdie-matching-service
    restart: unless-stopped
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development
      - PORT=3008
      - MATCHING_DB_URI=mongodb+srv://birdie_admin:AppUser%232025%21@birdie-bash-cluster.lwadyko.mongodb.net/matching?retryWrites=true&w=majority&appName=birdie-bash-cluster
      - GRPC_PORT=50051
      - GATEWAY_URL=http://birdie-gateway:3000
      - retryWrites=true&w=majority&appName=birdie-bash-cluster
      - RABBIT_URL=amqp://admin:password123@localhost:5672
      - RABBIT_EXCHANGE=events
      - RABBIT_RETRY_MS=2000
      - RABBIT_AUTOBIND=true
      - RABBIT_BIND_QUEUE=events.debug
      - RABBIT_BIND_KEY=event.#
      - RABBIT_LOG_PAYLOADS=true
      - RABBIT_MAX_LOG_BYTES=1000
      - RABBIT_AUTO_BIND_ON_RETURN=true
      - EVENT_BASE_URL=http://event-service:3003
      - REGISTER_BASE_URL=http://registration-service:3005
      - AUTH_BASE_URL=http://auth-service:3001

    depends_on:
      - mongodb
    networks:
      - birdie-network

volumes:
  mongodb_data:
    driver: local
  rabbitmq_data:
    driver: local
  mysql_data:
    driver: local

networks:
  birdie-network:
    driver: bridge
