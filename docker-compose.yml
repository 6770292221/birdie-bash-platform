services:
  # MongoDB for both auth and event services
  mongodb:
    image: mongo:7.0
    container_name: birdie-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - birdie-network

  # RabbitMQ for event service message queue
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: birdie-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - birdie-network

  # MySQL for payment service
  mysql:
    image: mysql:8.0
    container_name: birdie-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: payment_db
      MYSQL_USER: payment_user
      MYSQL_PASSWORD: payment123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/payment-init.sql:/docker-entrypoint-initdb.d/payment-init.sql:ro
    networks:
      - birdie-network

volumes:
  mongodb_data:
    driver: local
  rabbitmq_data:
    driver: local
  mysql_data:
    driver: local

networks:
  birdie-network:
    driver: bridge