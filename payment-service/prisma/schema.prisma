// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Payment {
  id             String   @id @default(uuid())
  eventId        String   @map("event_id")
  playerId       String   @map("player_id")
  amount         Float
  currency       String?  @default("thb")
  description    String?  @db.Text
  paymentMethod  String?  @default("PROMPT_PAY") @map("payment_method")
  qrCodeUri      String?  @map("qr_code_uri")
  omiseChargeId  String?  @map("omise_charge_id")
  omiseSourceId  String?  @map("omise_source_id")
  status         PaymentStatus @default(PENDING)
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")

  transactions   PaymentTransaction[]

  @@index([playerId])
  @@index([eventId])
  @@index([status])
  @@map("payment")
}

model PaymentTransaction {
  id            String   @id @default(uuid())
  paymentId     String   @map("payment_id")
  type          TransactionType
  amount        Float
  status        PaymentStatus
  transactionId String?  @map("transaction_id")
  timestamp     DateTime @default(now())

  payment       Payment  @relation(fields: [paymentId], references: [id], onDelete: Cascade)

  @@index([paymentId])
  @@index([type])
  @@index([timestamp])
  @@map("payment_transaction")
}

enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  CANCELLED
}

// Removed PaymentType to simplify schema per new requirements

enum TransactionType {
  charge
}