function getNested(obj: any, path: string) {
  return path.split('.').reduce((acc, k) => (acc == null ? undefined : acc[k]), obj);
}
export function render(tpl: string, data: Record<string, any>): string {
  return tpl.replace(/{{\s*([\w.]+)\s*}}/g, (_m, key) => {
    const v = getNested(data, key);
    return (v === undefined || v === null) ? `{{${key}}}` : String(v);
  });
}

export const messageTemplates = {
  'event.created': {
    email: { subject: '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà: {{eventName}}', body: '‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà "{{eventName}}" ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {{eventDate}} ‡∏ó‡∏µ‡πà {{location}}' },
    sms: '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà: {{eventName}} ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {{eventDate}}',
    webPush: { title: 'üéâ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà', body: '{{eventName}} - {{eventDate}}' },
    line: '‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà "{{eventName}}" ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {{eventDate}} ‡∏ó‡∏µ‡πà {{location}} ‡∏°‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡πÄ‡∏ñ‡∏≠‡∏∞!'
  },
  'event.updated': {
    email: { subject: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: {{eventName}}', body: '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° "{{eventName}}" ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á' },
    sms: '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: {{eventName}}',
    webPush: { title: 'üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°', body: '{{eventName}} ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á' }
  }
} as const;

export type TemplateId = keyof typeof messageTemplates;

export function buildMessages(
  id: TemplateId,
  data: Record<string, any>
): { emailSubject: string; emailBody: string; sms?: string; line?: string; webPush?: { title: string; body: string } } {
  const t = messageTemplates[id];
  const emailSubject = t.email ? render(t.email.subject, data) : 'Notification';
  const emailBody    = t.email ? render(t.email.body, data)    : '';
  const sms          = t.sms   ? render(t.sms, data)           : undefined;
  const line         = (t as any).line ? render((t as any).line, data) : undefined;
  const webPush      = t.webPush ? { title: render(t.webPush.title, data), body: render(t.webPush.body, data) } : undefined;
  return { emailSubject, emailBody, sms, line, webPush };
}
