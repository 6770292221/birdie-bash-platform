# Event Service Configuration

# Server Configuration
PORT=3002
NODE_ENV=development

# Database Configuration
# MongoDB connection string for events database
# For Docker setup: mongodb://admin:password123@localhost:27017/birdie_events?authSource=admin
# For MongoDB Atlas: mongodb+srv://username:password@cluster.mongodb.net/database
EVENT_DB_URI=mongodb://admin:password123@localhost:27017/birdie_events?authSource=admin

# RabbitMQ Configuration
# Message queue URL for event notifications and processing
# For Docker setup: amqp://admin:password123@localhost:5672
# For CloudAMQP: amqp://username:password@host:port
RABBIT_URL=amqp://admin:password123@localhost:5672
RABBIT_EXCHANGE=events
RABBIT_RETRY_MS=2000

# RabbitMQ Auto-binding Configuration
# Auto-bind to queue for consuming messages (default: true in development, false in production)
RABBIT_AUTOBIND=true
RABBIT_BIND_QUEUE=events.debug
RABBIT_BIND_KEY=event.#

# Logging Configuration
# Log message payloads for debugging (default: true in development, false in production)
RABBIT_LOG_PAYLOADS=true
RABBIT_MAX_LOG_BYTES=1000
RABBIT_AUTO_BIND_ON_RETURN=true

# CORS Configuration (optional)
# Add allowed origins if needed for specific frontend domains
# CORS_ORIGIN=http://localhost:3000,http://localhost:8080