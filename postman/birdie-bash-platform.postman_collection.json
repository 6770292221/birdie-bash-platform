{
  "info": {
    "name": "Birdie Bash Platform API",
    "description": "Postman collection for Auth and Health endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "GET /health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "health"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "POST /api/auth/register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 201\", function () {",
                  "  pm.response.to.have.status(201);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) {}",
                  "if (json && json.token) {",
                  "  pm.collectionVariables.set('token', json.token);",
                  "}",
                  "pm.test(\"Has token and user\", function () {",
                  "  pm.expect(json).to.have.property('token');",
                  "  pm.expect(json).to.have.property('user');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "POST /api/auth/login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) {}",
                  "if (json && json.token) {",
                  "  pm.collectionVariables.set('token', json.token);",
                  "}",
                  "pm.test(\"Has token and user\", function () {",
                  "  pm.expect(json).to.have.property('token');",
                  "  pm.expect(json).to.have.property('user');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        },
        {
          "name": "GET /api/auth/verify",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "verify"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status is 200\", function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "let json = {};",
                  "try { json = pm.response.json(); } catch (e) {}",
                  "pm.test(\"Has user payload\", function () {",
                  "  pm.expect(json).to.have.property('user');",
                  "});"
                ]
              }
            }
          ],
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    },
    {
      "key": "email",
      "value": "user{{$timestamp}}@example.com"
    },
    {
      "key": "password",
      "value": "Password123!"
    },
    {
      "key": "token",
      "value": ""
    }
  ]
}
